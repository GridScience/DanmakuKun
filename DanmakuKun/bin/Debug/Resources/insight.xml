<?xml version="1.0" encoding="utf-8"?>
<insight version="1.0">
  <f name="Player.play" type="void" source="Player" d="开始播放媒体文件" modifiers="Static">
  </f>
  <f name="Player.pause" type="void" source="Player" d="暂停视频流的回放。如果视频已经暂停，则调用此方法将不会执行任何操作。要在暂时视频后恢复播放，请调用 play()。" modifiers="Static">
  </f>
  <f name="Player.seek" type="void" source="Player" d="搜索与指定位置最接近的关键帧（在视频行业中也称为 I 帧）。关键帧位于从流的开始处算起的偏移位置（以毫秒为单位）。
视频流通常是使用以下两种类型的帧进行编码的：关键帧（或 I 帧）和 P 帧。关键帧包含完整图像；而 P 帧是一个中间帧，它在两个关键帧之间提供额外的视频信息。通常，视频流每 10 到 50 帧中有一个关键帧。" modifiers="Static">
    <a name="offset" type="Number" d="要在视频文件中移动到的时间近似值（以毫秒为单位）。" />
  </f>
  <f name="Player.jump" type="void" source="Player" d="跳至指定AV号指定页的视频" modifiers="Static">
    <a name="av" type="String" d="要跳转的视频(如av120040)。" />
    <a name="page" type="Number" d="要跳转的视频页数。" default="1" />
    <a name="newWindow" type="Boolean" d="是否打开新窗口进行跳转" default="false" />
  </f>
  <f name="Player.commentTrigger" type="uint" source="Player" d="监听发送弹幕" modifiers="Static" remarks="此函数不会因播放器暂停而终止执行。
回调函数定义
function commentCallback(cd:CommentData):void;">
    <a name="f" type="Function" d="发送弹幕时执行的回调函数" />
    <a name="timeout" type="Number" d="监听超时时间(ms)" default="1000" />
  </f>
  <f name="Player.keyTrigger" type="uint" source="Player" d="监听键盘输入" modifiers="Static" remarks="此函数不会因播放器暂停而终止执行
此函数只能监听数字键盘 0-9 及 上下左右 Home, End, Page UP, Page Down, W, S, A, D
回调函数定义
function keyCallback(key:int):void;">
    <a name="f" type="Function" d="键盘按下时的回调函数" />
    <a name="timeout" type="Number" d="监听超时时间" default="1000" />
    <a name="up" type="Boolean" d="是否为监听keyUp事件" default="false" />
  </f>
  <f name="Player.setMask" type="void" source="Player" modifiers="Static" d="设置播放器遮罩">
    <a name="obj" type="DisplayObject" d="作为遮罩的图形对象" />
  </f>
  <f name="Player.createSound" type="ScriptSound" source="Player" modifiers="Static" d="建立声音元件">
    <a name="t" type="String" d="播放声音类型" />
    <a name="onLoad" type="Function" d="载入完成时的回调函数" default="null" />
  </f>
  <f name="Math.abs" type="Number" source="Math" modifiers="Static" d="计算并返回由参数 val 指定的数字的绝对值。" return="指定参数的绝对值。">
    <a name="val" type="Number" d="要返回绝对值的数字。" />
  </f>
  <f name="Math.acos" type="Number" source="Math" modifiers="Static" d="以弧度为单位计算并返回由参数 val 指定的数字的反余弦值。" return="参数 val 的反余弦值。">
    <a name="val" type="Number" d="-1.0 到 1.0 之间的一个数字。" />
  </f>
  <f name="Math.asin" type="Number" source="Math" modifiers="Static" d="以弧度为单位计算并返回由参数 val 指定的数字的反正弦值。" return="参数 val 的正余弦值。">
    <a name="val" type="Number" d="-1.0 到 1.0 之间的一个数字。" />
  </f>
  <f name="Math.atan" type="Number" source="Math" modifiers="Static" d="以弧度为单位计算并返回角度值，该角度的正切值已由参数 val 指定。返回值介于负二分之 pi 和正二分之 pi 之间。" return="介于负二分之 pi 和正二分之 pi 之间的一个数字。">
    <a name="val" type="Number" d="表示角的正切值的一个数字。" />
  </f>
  <f name="Math.atan2" type="Number" source="Math" modifiers="Static" d="以弧度为单位计算并返回点 y/x 的角度，该角度从圆的 x 轴（其中，0,0 表示圆心）沿逆时针方向测量。返回值介于正 pi 和负 pi 之间。请注意，atan2 的第一个参数始终是 y 坐标。" return="一个数字。">
    <a name="y" type="Number" d="该点的 y 坐标。" />
    <a name="x" type="Number" d="该点的 x 坐标。" />
  </f>
  <f name="Math.ceil" type="Number" source="Math" modifiers="Static" d="返回指定数字或表达式的上限值。数字的上限值是大于等于该数字的最接近的整数。" return="最接近且大于等于参数 val 的整数。">
    <a name="val" type="Number" d="一个数字或表达式。" />
  </f>
  <f name="Math.cos" type="Number" source="Math" modifiers="Static" d="以弧度为单位计算并返回指定角度的余弦值。要计算弧度，请参阅 Math 类的概述。" return="-1.0 到 1.0 之间的一个数字。">
    <a name="angleRadians" type="Number" d="一个数字，它表示一个以弧度为单位的角度。" />
  </f>
  <f name="Math.exp" type="Number" source="Math" modifiers="Static" d="返回自然对数的底 (e) 的 x 次幂的值，x 由参数 x 指定。常量 Math.E 可以提供 e 的值。" return="e 的 x 次幂，x 由参数 val 指定。">
    <a name="val" type="Number" d="指数；一个数字或表达式。" />
  </f>
  <f name="Math.floor" type="Number" source="Math" modifiers="Static" d="返回由参数 val 指定的数字或表达式的下限值。下限值是小于等于指定数字或表达式的最接近的整数。" return="最接近且小于等于参数 val 的整数。">
    <a name="val" type="Number" d="一个数字或表达式。" />
  </f>
  <f name="Math.log" type="Number" source="Math" modifiers="Static" d="返回参数 val 的自然对数。" return="参数 val 的自然对数。">
    <a name="val" type="Number" d="其值大于 0 的数字或表达式。" />
  </f>
  <f name="Math.max" type="Number" source="Math" modifiers="Static,Params" d="计算 val1 和 val2（或更多的值）并返回最大值。" return="参数 val1 和 val2（或更多值）的最大值。">
    <a name="val1" type="Number" d="一个数字或表达式。" />
    <a name="val2" type="Number" d="一个数字或表达式。" />
    <a name="... rest" type="Number" d="一个数字或表达式。Math.max() 可以接受多个参数。" hideInHeader="true" />
  </f>
  <f name="Math.min" type="Number" source="Math" modifiers="Static,Params" d="计算 val1 和 val2（或更多的值）并返回最小值。" return="参数 val1 和 val2（或更多值）的最小值。">
    <a name="val1" type="Number" d="一个数字或表达式。" />
    <a name="val2" type="Number" d="一个数字或表达式。" />
    <a name="... rest" type="Number" d="一个数字或表达式。Math.min() 可以接受多个参数。" hideInHeader="true" />
  </f>
</insight>